name: Publish

on:
  release:
    types: [created]
  workflow_dispatch:

jobs:
  python-package:
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade build pytest

      - name: Build source and wheel
        run: |
          python -m build --sdist --wheel --outdir dist/

      - name: Test built package
        run: |
          pip install --only-binary :all: dist/ms2rescore-*.whl
          # pytest
          ms2rescore --help

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: python-package
          path: dist/*

      - uses: pypa/gh-action-pypi-publish@release/v1

  windows-installer:
    runs-on: windows-latest
    needs: python-package
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install package and dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --only-binary :all: .[ionmob] pyinstaller

      - name: Install Inno Setup
        uses: crazy-max/ghaction-chocolatey@v3
        with:
          args: install innosetup -y --allow-unofficial --force

      - name: Run pyinstaller
        run: pyinstaller ./ms2rescore.spec --clean --noconfirm

      - name: Test built exe
        run: dist/ms2rescore/ms2rescore.exe

      - name: Run Inno Setup
        run: ISCC.exe ./ms2rescore_innosetup.iss /DAppVersion=${{  github.ref_name }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/*.exe

      - name: Upload installer to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref }}
          file_glob: true
          file: dist/*.exe

  docker-image:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ghcr.io/${{ github.repository }}

      - name: Build and push Docker images
        id: push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ghcr.io/${{ github.repository }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
